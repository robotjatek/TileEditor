<Window x:Class="TileEditor.ResizeLayerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TileEditor" xmlns:shell="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:ResizeLayerWindowViewModel}"
        WindowStartupLocation="CenterOwner"
        Title="Resize layer">

    <WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="36" GlassFrameThickness="0" CornerRadius="0" ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Style TargetType="local:ResizeLayerWindow">
            <Setter Property="Background" Value="#303040" />
            <Setter Property="SizeToContent" Value="Height" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="Width" Value="500" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:ResizeLayerWindow">
                        <Grid Background="#303040">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Title bar-->
                            <Grid Grid.Row="0" Background="#4D4D66" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0" Background="Transparent" Height="36" Width="36" />

                                <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <TextBlock FontSize="16" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"   
                                            VerticalAlignment="Top" HorizontalAlignment="Left"
                                            Margin="4,0,0,0"/>
                                </StackPanel>

                                <StackPanel WindowChrome.IsHitTestVisibleInChrome="True" 
                                            Grid.Column="2" Orientation="Horizontal">

                                    <Border Width="36" Height="36" Padding="5">
                                        <Button Style="{StaticResource closeButton}" Click="Close_Click">X</Button>
                                    </Border>
                                </StackPanel>

                            </Grid>

                            <Separator Grid.Row="1" />

                            <!-- Content -->
                            <Grid Grid.Row="2">
                                <AdornerDecorator>
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </AdornerDecorator>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Grid">

            <Style.Resources>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="Margin" Value="0, 0, 0, 10" />
                    <Setter Property="Height" Value="32" />
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <AdornedElementPlaceholder Grid.Row="0" x:Name="placeholder"/>
                                    <TextBlock Grid.Row="1" FontSize="16" Foreground="Red" Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" ></TextBlock>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True" >
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                                                    Path=(Validation.Errors)[0].ErrorContent }"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Height" Value="32" />
                    <Setter Property="Margin" Value="0, 0, 4, 0" />
                </Style>
            </Style.Resources>
        </Style>

    </Window.Resources>

    <StackPanel VerticalAlignment="Center" Margin="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Grid.Column="0">Layer width</Label>
            <TextBox Grid.Row="0" Grid.Column="1" x:Name="tbWidth" Margin="0, 0, 0, 25">
                <TextBox.Text>
                    <Binding Path="Width" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:LayerWidthValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Label Grid.Row="1" Grid.Column="0">Layer height</Label>
            <TextBox Grid.Row="1" Grid.Column="1" x:Name="tbHeight" Margin="0, 0, 0, 25">
                <TextBox.Text>
                    <Binding Path="Height" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:LayerHeightValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

        </Grid>

        <Separator />

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition  Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Padding="5">
                <Button Command="{Binding ExecuteCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=tbWidth, Path=(Validation.HasError)}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=tbHeight, Path=(Validation.HasError)}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    OK
                </Button>
            </Border>
            <Border Grid.Column="1" Padding="5">
                <Button Command="{Binding CancelCommand}" Grid.Column="1">Cancel</Button>
            </Border>
        </Grid>
    </StackPanel>
</Window>
