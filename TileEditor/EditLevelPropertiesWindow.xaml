<Window x:Class="TileEditor.EditLevelPropertiesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TileEditor" xmlns:shell="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="Level Properties"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="36" GlassFrameThickness="0" CornerRadius="0" ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Style TargetType="local:EditLevelPropertiesWindow">
            <Setter Property="Background" Value="#303040" />
            <Setter Property="SizeToContent" Value="Height" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="Width" Value="600" />

            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome />
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:EditLevelPropertiesWindow">
                        <Grid Background="#303040">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Title bar-->
                            <Grid Grid.Row="0" Background="#4D4D66" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0" Background="Transparent" Height="36" Width="36" />

                                <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <TextBlock FontSize="16" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"   
                                            VerticalAlignment="Top" HorizontalAlignment="Left"
                                            Margin="4,0,0,0"/>
                                </StackPanel>

                                <StackPanel WindowChrome.IsHitTestVisibleInChrome="True" 
                                            Grid.Column="2" Orientation="Horizontal">

                                    <Border Width="36" Height="36" Padding="5">
                                        <Button Style="{StaticResource closeButton}" Click="Close_Click">X</Button>
                                    </Border>
                                </StackPanel>

                            </Grid>

                            <Separator Grid.Row="1" />

                            <!-- Content -->
                            <Grid Grid.Row="2">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Grid">
            <Style.Resources>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="Margin" Value="0,0,0,10" />
                    <Setter Property="Height" Value="32" />
                </Style>

                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Margin" Value="5,0,0,10" />
                    <Setter Property="Height" Value="32" />
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>

    <Border Padding="5">
        <StackPanel VerticalAlignment="Center">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0">GamePath</Label>
                <TextBox Grid.Row="0" Grid.Column="1" IsReadOnly="True" Text="{Binding GamePath}"></TextBox>
                <Button Grid.Row="0" Grid.Column="2" Command="{Binding PickGamePathCommand}">...</Button>

                <Label Grid.Row="1" Grid.Column="0">Level name</Label>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding LevelProperties.Name}"></TextBox>

                <Label Grid.Row="2" Grid.Column="0">Next Level</Label>
                <TextBox Grid.Row="2" Grid.Column="1" IsReadOnly="False" Text="{Binding LevelProperties.NextLevel}"></TextBox>
                <Button Grid.Row="2" Grid.Column="2" Command="{Binding PickNextLevelCommand}">...</Button>

                <Label Grid.Row="3" Grid.Column="0">Background</Label>
                <TextBox Grid.Row="3" Grid.Column="1" IsReadOnly="True" Text="{Binding LevelProperties.BackgroundPath}"></TextBox>
                <Button Grid.Row="3" Grid.Column="2" Command="{Binding PickBackgroundCommand}">...</Button>

                <Label Grid.Row="4" Grid.Column="0">Music</Label>
                <TextBox Grid.Row="4" Grid.Column="1" IsReadOnly="False" Text="{Binding LevelProperties.MusicPath}"></TextBox>
                <Button Grid.Row="4" Grid.Column="2" Command="{Binding PickMusicCommand}">...</Button>

                <Label Grid.Row="5" Grid.Column="0">Initial Event</Label>
                <ComboBox Style="{DynamicResource ComboBoxStyle1}" Grid.Row="5" Grid.Column="1" ItemsSource="{Binding InitialEventKeys}" SelectedItem="{Binding LevelProperties.InitialEventKey}">
                    <!-- Style -->
                    <ComboBox.Resources>
                        <Style TargetType="ToggleButton" x:Key="ComboBoxToggleButtonStyle">
                            <Setter Property="Background" Value="#303040"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" Value="White"/>
                            <Setter Property="BorderThickness" Value="0.8"/>
                            <Setter Property="Padding" Value="5"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border Name="Border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid>
                                                    <ContentPresenter HorizontalAlignment="Left"
                                                                      VerticalAlignment="Center"
                                                                      Margin="5,0,20,0" />
                                                    <Path Name="Arrow"
                                                          Data="M 0 0 L 4 4 L 8 0 Z" 
                                                          Fill="White"
                                                          HorizontalAlignment="Right" 
                                                          VerticalAlignment="Center" 
                                                          Margin="0,0,10,0" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#4D4D66" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.Resources>

                    <!-- Template -->
                    <ComboBox.Template>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <!-- ToggleButton -->
                                <ToggleButton Name="ToggleButton"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      Style="{StaticResource ComboBoxToggleButtonStyle}"
                                      HorizontalContentAlignment="Left"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <!-- Popup -->
                                <Popup Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                    <Border Background="#303040" BorderBrush="Black" BorderThickness="1">
                                        <ScrollViewer>
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                </ComboBox>
            </Grid>
        </StackPanel>
    </Border>

</Window>
